// <auto-generated />
using ClosedCircuit.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClosedCircuit.Migrations
{
    [DbContext(typeof(CCGameDBContext))]
    [Migration("20210412232640_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClosedCircuit.Models.Round", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BigSpawn")
                        .HasColumnType("int");

                    b.Property<int>("FastSpawn")
                        .HasColumnType("int");

                    b.Property<int>("FatSpawn")
                        .HasColumnType("int");

                    b.Property<long>("RoundNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("SmallSpawn")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Rounds");
                });
#pragma warning restore 612, 618
        }
    }
}
